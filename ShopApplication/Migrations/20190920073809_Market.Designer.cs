// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopApplication.Data;

namespace ShopApplication.Migrations
{
    [DbContext(typeof(MarketContext))]
    [Migration("20190920073809_Market")]
    partial class Market
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopApplication.Data.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int>("GroupCode");

                    b.Property<string>("Name");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ShopApplication.Data.Entities.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("GroupId");

                    b.Property<int?>("ProductId");

                    b.Property<int?>("SaleId");

                    b.HasKey("HistoryId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("ShopApplication.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeProduct");

                    b.Property<int?>("GroupId");

                    b.Property<string>("ProductColor");

                    b.Property<string>("ProductName");

                    b.Property<int>("ProductPrice");

                    b.HasKey("ProductId");

                    b.HasIndex("GroupId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShopApplication.Data.Entities.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<int?>("GroupId");

                    b.Property<int?>("ProductId");

                    b.Property<DateTime>("dateTime");

                    b.HasKey("SaleId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ShopApplication.Data.Entities.History", b =>
                {
                    b.HasOne("ShopApplication.Data.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ShopApplication.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ShopApplication.Data.Entities.Sale", "Sale")
                        .WithMany()
                        .HasForeignKey("SaleId");
                });

            modelBuilder.Entity("ShopApplication.Data.Entities.Product", b =>
                {
                    b.HasOne("ShopApplication.Data.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("ShopApplication.Data.Entities.Sale", b =>
                {
                    b.HasOne("ShopApplication.Data.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ShopApplication.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
